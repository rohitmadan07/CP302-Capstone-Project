#include "cache.h"
#include "uncore.h"
#define _BSD_SOURCE
#include <getopt.h>
#include "ooo_cpu.h"
#include <fstream>

long long int PREV_SUM = 0;

void CACHE::llc_prefetcher_initialize() 
{
    cout << "LLC Next Line Prefetcher" << endl;
}

uint32_t CACHE::llc_prefetcher_operate(uint64_t addr, uint64_t ip, uint8_t cache_hit, uint8_t type, uint32_t metadata_in)
{
    long long int SUM = 0;
    long long int CURR_SUM = 0;
    for (uint32_t i=0; i<DRAM_CHANNELS; i++) {
        SUM = SUM + uncore.DRAM.RQ[i].ROW_BUFFER_HIT + uncore.DRAM.WQ[i].ROW_BUFFER_HIT + uncore.DRAM.RQ[i].ROW_BUFFER_MISS + uncore.DRAM.WQ[i].ROW_BUFFER_MISS; 
    }
    CURR_SUM = SUM - PREV_SUM;
    PREV_SUM = SUM;
    cout<<"Sum = "<<CURR_SUM<<" "<<SUM<<" "<<PREV_SUM;
    cout << endl;

    if(CURR_SUM > 16602.66469){
        cout<<"One"<<endl;
        uint64_t pf_addr = ((addr>>LOG2_BLOCK_SIZE)+1) << LOG2_BLOCK_SIZE;
        prefetch_line(ip, addr, pf_addr, FILL_LLC, 0);
    } else{
        cout<<"Two"<<endl;
        uint64_t pf_addr = ((addr>>LOG2_BLOCK_SIZE)+1) << LOG2_BLOCK_SIZE;
        prefetch_line(ip, addr, pf_addr, FILL_LLC, 0);
        uint64_t pf_addr2 = ((addr>>LOG2_BLOCK_SIZE)+2) << LOG2_BLOCK_SIZE;
        prefetch_line(ip, addr, pf_addr2, FILL_LLC, 0);
    }

    return metadata_in;
}

uint32_t CACHE::llc_prefetcher_cache_fill(uint64_t addr, uint32_t set, uint32_t way, uint8_t prefetch, uint64_t evicted_addr, uint32_t metadata_in)
{
  return metadata_in;
}

void CACHE::llc_prefetcher_final_stats()
{
  cout << "LLC Next Line Prefetcher Final Stats: none" << endl;
}
